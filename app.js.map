{"version":3,"sources":["app.module.js","app.config.js","app.route.js","app.run.js","controllers/home.controller.js","controllers/login.controller.js","controllers/tickets-add.controller.js","controllers/tickets.controller.js","directives/header.directive.js","services/auth.service.js","services/ticket.service.js","services/user.service.js"],"names":["angular","module","config","Config","serverUrl","factory","$inject","route","$stateProvider","$urlRouterProvider","otherwise","state","url","controller","controllerAs","templateUrl","resolve","currentAuth","auth","$requireAuth","$waitForAuth","views","@","run","$rootScope","$state","$on","event","toState","toParams","fromState","fromParams","error","pageName","go","HomeController","activate","vm","this","me","LoginController","fbLogin","$authWithOAuthPopup","then","authData","console","log","uid","TicketsAddController","ticket","add","$add","departureDate","arrivedDate","destination","languages","message","TicketsController","tickets","header","scope","HeaderController","bindToController","$onAuth","logout","confirm","$unauth","directive","$firebaseAuth","ref","Firebase","$firebaseArray","user"],"mappings":"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","file":"app.js","sourcesContent":["(function () {\n  'use strict';\n\n  angular.module('app', [\n    'ngAnimate',\n    'ui.router',\n    'firebase'\n  ]);\n})();\n","(function () {\n  'use strict';\n\n  angular.module('app').factory('config', config);\n\n  config.$inject = [];\n\n  function config() {\n    var Config = function () {\n      return {\n        'serverUrl': 'https://omotenashi.firebaseio.com/'\n      };\n    };\n    return new Config();\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('app').config(route);\n\n  route.$inject = ['$stateProvider', '$urlRouterProvider'];\n\n  function route($stateProvider, $urlRouterProvider) {\n    $urlRouterProvider.otherwise('/');\n    $stateProvider\n      .state('home', {\n        url: '/',\n        controller: 'HomeController',\n        controllerAs: 'home',\n        templateUrl: 'partials/home.html',\n        resolve: {\n          currentAuth: ['auth', function(auth) {\n            return auth.$requireAuth();\n          }]\n        }\n      })\n      .state('login', {\n        url: '/login',\n        controller: 'LoginController',\n        controllerAs: 'login',\n        templateUrl: 'partials/login.html',\n        resolve: {\n          currentAuth: ['auth', function(auth) {\n            return auth.$waitForAuth();\n          }]\n        }\n      })\n      .state('tickets', {\n        url: '/tickets',\n        controller: 'TicketsController',\n        controllerAs: 'tickets',\n        templateUrl: 'partials/tickets.html',\n        resolve: {\n          currentAuth: ['auth', function(auth) {\n            return auth.$requireAuth();\n          }]\n        }\n      })\n      .state('tickets.add', {\n        url: '/add',\n        views: {\n          \"@\": {\n            controller: 'TicketsAddController',\n            controllerAs: 'ticketsAdd',\n            templateUrl: 'partials/tickets-add.html'\n          }\n        },\n        resolve: {\n          currentAuth: ['auth', function(auth) {\n            return auth.$requireAuth();\n          }]\n        }\n      });\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('app').run(run);\n\n  run.$inject = ['$rootScope', '$state'];\n\n  function run($rootScope, $state) {\n    $rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams, error) {\n      $rootScope.pageName = toState.controllerAs;\n    });\n    $rootScope.$on('$stateChangeError', function (event, toState, toParams, fromState, fromParams, error) {\n      if (error === 'AUTH_REQUIRED') {\n        $state.go('login');\n      }\n    });\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('app').controller('HomeController', HomeController);\n\n  HomeController.$inject = ['currentAuth'];\n\n  function HomeController(currentAuth) {\n\n    var vm = this;\n    vm.me = currentAuth;\n\n    activate();\n\n    function activate() {}\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('app').controller('LoginController', LoginController);\n\n  LoginController.$inject = ['$state', 'auth', 'currentAuth'];\n\n  function LoginController($state, auth, currentAuth) {\n\n    var vm = this;\n    vm.fbLogin = fbLogin;\n\n    activate();\n\n    function activate() {\n      if (currentAuth) {\n        $state.go('home');\n      }\n    }\n\n    function fbLogin() {\n      auth.$authWithOAuthPopup('facebook')\n        .then(function (authData) {\n          console.log('Logged in as:', authData.uid);\n          $state.go('home');\n        })\n        .catch(function (error) {\n          console.log('Authentication failed:', error);\n        });\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('app').controller('TicketsAddController', TicketsAddController);\n\n  TicketsAddController.$inject = ['$state', 'ticket'];\n\n  function TicketsAddController($state, ticket) {\n    var vm = this;\n    vm.add = add;\n\n    activate();\n\n    function activate() {}\n\n    function add() {\n      ticket.$add({\n        departureDate: vm.departureDate,\n        arrivedDate: vm.arrivedDate,\n        destination: vm.destination,\n        languages: vm.languages,\n        message: vm.message\n      }).then(function () {\n        $state.go('tickets');\n      });\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('app').controller('TicketsController', TicketsController);\n\n  TicketsController.$inject = ['ticket'];\n\n  function TicketsController(ticket) {\n    var vm = this;\n    vm.tickets = [];\n\n    activate();\n\n    function activate() {\n      vm.tickets = ticket;\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('app').directive('header', header);\n\n  header.$inject = [];\n\n  function header() {\n    return {\n      templateUrl: 'partials/header.html',\n      scope: {},\n      controller: HeaderController,\n      controllerAs: 'header',\n      bindToController: true\n    };\n  }\n\n  HeaderController.$inject = ['$state', 'auth'];\n\n  function HeaderController($state, auth) {\n\n    var vm = this;\n    vm.auth = {};\n    vm.logout = logout;\n\n    activate();\n\n    function activate() {\n      auth.$onAuth(function (authData) {\n        vm.auth = authData;\n      });\n    }\n\n    function logout() {\n      if (!confirm('ログアウトします')) {\n        return;\n      }\n      auth.$unauth();\n      $state.go('login');\n    }\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('app').factory('auth', auth);\n\n  auth.$inject = ['$firebaseAuth', 'config'];\n\n  function auth($firebaseAuth, config) {\n    var ref = new Firebase(config.serverUrl);\n    return $firebaseAuth(ref);\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('app').factory('ticket', ticket);\n\n  ticket.$inject = ['$firebaseArray', 'config'];\n\n  function ticket($firebaseArray, config) {\n    var ref = new Firebase(config.serverUrl + 'tickets');\n    return $firebaseArray(ref);\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('app').factory('user', user);\n\n  user.$inject = ['$firebaseAuth', 'config'];\n\n  function user($firebaseAuth, config) {\n    var ref = new Firebase(config.serverUrl + 'users');\n    return $firebaseAuth(ref);\n  }\n})();\n"],"sourceRoot":"/source/"}